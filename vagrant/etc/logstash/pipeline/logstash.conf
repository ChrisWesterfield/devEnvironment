input {
    file {
        type => "nginx_access"
        path => "/home/vagrant/base/log/*.access.log"
        start_position => beginning
    }
    file {
        type => "nginx_error"
        path => "/home/vagrant/base/log/*.error.log"
        start_position => beginning
    }
    file {
        type => "syslog"
        path => "/var/log/syslog"
        start_position => beginning
    }
    file {
        type => "applications"
        path => "/application/swp/var/log/*.log"
        start_position => beginning
    }
    tcp {
        port => 5000
    }
}

filter {
  if [type] == "nginx_access" {
    grok {
       match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
       overwrite => [ "message" ]
     }
     mutate {
       convert => ["response", "integer"]
       convert => ["bytes", "integer"]
       convert => ["responsetime", "float"]
     }
     geoip {
       source => "clientip"
       target => "geoip"
       add_tag => [ "nginx-geoip" ]
     }
     date {
       match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
       remove_field => [ "timestamp" ]
     }
     useragent {
       source => "agent"
     }
  }
  else if [type] == "nginx_error" {
    mutate { replace => { "type" => "error_log" } }
    grok {

      match => {
          "message" => [
              "(?<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[%{DATA:err_severity}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{DATA:err_message}(?:, client: (?<client_ip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, host: %{QS:client_ip})?(?:, referrer: \"%{URI:referrer})?",

              "%{DATESTAMP:timestamp} \[%{DATA:err_severity}\] %{GREEDYDATA:err_message}"
          ]
      }

    }
    date {
      match => [ "timestamp" , "yyyy/MM/dd HH:mm:ss" ]
      timezone => 'UTC'
    }
  }
  else if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  else if [type] == "applications" {
    grok {
        patterns_dir => ["/home/vagrant/base/etc/logstash/patterns"]
        match => { "message" => "%{SYMFONY}"}
    }
  }
}

output {
  elasticsearch {
    hosts => ["127.0.0.1:9200"]
  }
}
